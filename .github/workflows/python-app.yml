# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  workflow_dispatch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

permissions:
  contents: read

jobs:
  # sql-env:

  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Install a SQL Server suite of tools
  #     if: ${{ env.ACT }}
  #     uses: NathanDWalsh/mssqlsuite@main
  #     #uses: potatoqualitee/mssqlsuite@v1.7
  #     with:
  #       install: sqlengine

  build:
    strategy:
      max-parallel: 1
      matrix:
        sys:
          # - os: windows-latest
          #   shell: powershell
          #   tox-factor: -f win
          - os: ubuntu-latest
            shell: bash
            tox-factor: -f lin
        # python-version: ["3.13"]
        # needs: sql-env
        # runs-on: ubuntu-latest
        # runs-on: windows-latest
    runs-on: ${{ matrix.sys.os }}
    defaults:
      run:
        shell: ${{ matrix.sys.shell }}
    steps:
      - name: Install a SQL Server suite of tools
        if: ${{ !env.ACT }}
        uses: NathanDWalsh/mssqlsuite@main
        #uses: potatoqualitee/mssqlsuite@v1.7
        with:
          install: sqlengine, sqlclient
      # - name: Run sqlclient
      #   run: |
      #     sqlcmd -S localhost -U sa -P dbatools.I0 -d master -Q "drop database if exists els;"
      #     sqlcmd -S localhost -U sa -P dbatools.I0 -d master -Q "create database els;"
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      # pip install -r requirements.txt
      # pip install -r requirements-test.txt
      # - name: Lint with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # - name: Test with pytest
      #   run: |
      #     pytest tests/test_yaml.py
      - name: Test with tox
        run: |
          python -m tox ${{ matrix.sys.tox-factor }}
  # clean:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Close sql
  #     if: ${{ env.ACT }}
  #     run: |
  #       docker stop mssql
  #       docker remove mssql
