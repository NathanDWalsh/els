# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on: workflow_dispatch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

permissions:
  contents: read

jobs:

  # sql-env:

  #   runs-on: ubuntu-latest   
  #   steps:
  #   - name: Install a SQL Server suite of tools
  #     if: ${{ env.ACT }}
  #     uses: NathanDWalsh/mssqlsuite@main
  #     #uses: potatoqualitee/mssqlsuite@v1.7
  #     with:
  #       install: sqlengine
 
  build:
    # needs: sql-env
    # runs-on: ubuntu-latest
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: ["3.11"]
    steps:
    - run: |
        docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=dbatools.I0" -p 1433:1433 -d mcr.microsoft.com/mssql/server:2022-latest --hostname localhost
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc
        sudo apt-get update
        sudo apt-get install mssql-tools18 unixodbc-dev
        echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bash_profile
        source ~/.bash_profile
        echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc
        source ~/.bashrc
        sqlcmd -S localhost -U sa -P dbatools.I0 -d master -Q "drop database if exists els;"
        sqlcmd -S localhost -U sa -P dbatools.I0 -d master -Q "create database els;"
    - name: Install a SQL Server suite of tools
      if: ${{ !env.ACT }}
      uses: NathanDWalsh/mssqlsuite@main
      #uses: potatoqualitee/mssqlsuite@v1.7
      with:
        install: sqlclient
    - name: Run sqlclient
      run: |
        sqlcmd -S localhost -U sa -P dbatools.I0 -d master -Q "drop database if exists els;"
        sqlcmd -S localhost -U sa -P dbatools.I0 -d master -Q "create database els;"
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: "${{ matrix.python-version }}"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r requirements.txt
        pip install -r requirements-test.txt
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest tests/test_yaml.py
  # clean:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Close sql
  #     if: ${{ env.ACT }}
  #     run: |
  #       docker stop mssql
  #       docker remove mssql
